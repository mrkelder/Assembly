Microsoft (R) Macro Assembler Version 14.29.30133.0	    10/11/21 17:58:53
Lab.asm							     Page 1 - 1


				   
				.MODEL FLAT,stdcall  ;Модель памяти плоская, стандартный

				;   Условие задачи,используем формат байта
				;       / b^2+a^2  , если 9b-5a<4;   a=4,   b=1,  y=17	(-11<4)
				;    Y=|  a-12     , если 9b-5a=4;   a=1,	b=1,  y=-11	(4=4)
				;       \ |a|-3*|b|, если 9b-5a>4;   a=-5,  b=-2, y=-1	(7>4)

				.LIST ; Директивы .XLIST и .LIST обеспечивают правильное
				      ; формирование листинга программы
 00000000			.DATA
 00000000 04				a  db  4
 00000001 01				b  db  1

 00000000			.DATA? ;Директива описания начала раздела неинициализированных данных. 
 00000000 00				y   db    ?

 00000000			.CODE   ;Директива описания начала сегмента кода. 
 00000000			lab2:   ;Это метка, в нашей программе определяет точку
 00000000  B4 09			mov ah, 9	;ax=9
 00000002  F6 2D 00000001 R		imul b		;ax=9b
 00000008  8A FC			mov bh, ah	;bx=9b
 0000000A  B4 05			mov ah,5	;ax=5
 0000000C  F6 2D 00000000 R		imul a		;ax=5a
 00000012  2A FC			sub bh, ah	;bx=9b-5a
					
 00000014  80 FF 04			cmp bh, 4

 00000017  7C 04			jl	m1		;9b-5a<4
 00000019  74 26			je	m2		;9b-5a=4
 0000001B  7F 36			jg	m3		;9b-5a>4

 0000001D			m1:
					;y=b^2+a^2
 0000001D  8A 3D 00000001 R		mov bh, b	;ax=b
 00000023  F6 2D 00000001 R		imul b		;ax=b^2
 00000029  8A FC			mov bh, ah	;bx=b^2
 0000002B  8A 25 00000000 R		mov ah, a	;ax=a
 00000031  F6 2D 00000000 R		imul a		;ax=a^2
 00000037  02 FC			add bh, ah	;bx=b^2+a^2
 00000039  88 3D 00000000 R		mov y, bh	;y=b^2+a^2
 0000003F  EB 42			jmp m_end
 00000041			m2:
					;y=a-12
 00000041  B4 0C			mov ah, 12	;ax=12
 00000043  8A 3D 00000000 R		mov bh, a	;bx=a
 00000049  2A FC			sub	bh, ah	;bx=a-12
 0000004B  88 3D 00000000 R		mov y, bh	;y=a-12
 00000051  EB 30			jmp  m_end
 00000053			m3:
					;y=|a|-3*|b|
 00000053  8A 25 00000000 R		mov ah, a	;ax=a
 00000059  80 FC 00			cmp ah, 0
 0000005C  7C 04			jl a_less
 0000005E  74 04			je a_pos
 00000060  7F 02			jg a_pos
 00000062			a_less:
 00000062  F6 DC			neg ah		;ax=|a|
 00000064			a_pos:
 00000064  8A FC			mov bh,ah	;bx=|a|
 00000066  8A 25 00000001 R		mov ah, b	;ax=b
 0000006C  80 FC 00			cmp ah, 0
 0000006F  7C 04			jl b_less
 00000071  74 04			je b_pos
 00000073  7F 02			jg b_pos
 00000075			b_less:
 00000075  F6 DC			neg ah		;ax=|b|
 00000077			b_pos:
 00000077  B5 03			mov ch, 3	;si=3
 00000079  F6 ED			imul ch		;ax=3*|b|
 0000007B  2A FF			sub bh, bh	;bx=|a|-3*|b|
 0000007D  88 3D 00000000 R		mov y, bh	;y=|a|-3*|b|

 00000083			m_end:
					;mov  x,ax    ;Занесение результата в поле переменной Х
 00000083  C3			ret  ;это макрос, который вызывает функцию ExitProcess, которая
					    ;возвращает управление операционоой системе
				end	lab2  ;Это директива ассемблера - определяет точку входа.
