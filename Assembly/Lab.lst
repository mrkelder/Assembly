Microsoft (R) Macro Assembler Version 14.29.30133.0	    11/16/21 13:38:11
Lab.asm							     Page 1 - 1


				   
				.MODEL FLAT,stdcall

				; Определить среднее арифметическое четных элементов массива, расположенных на четных позициях.

				.LIST
				  
 00000000			.DATA
 00000000 00000002			x		dd		2, 1, 2, 4, 2, 5, 1, 7, 3, 9
	   00000001
	   00000002
	   00000004
	   00000002
	   00000005
	   00000001
	   00000007
	   00000003
	   00000009
 00000028 00000002			y		dd		2, 3, 4, 5
	   00000003
	   00000004
	   00000005
 00000038 0000000A			nx		dd		10
 0000003C 00000004			ny		dd		4
 00000040 00000000			cEl		dd		0 ; кол-во подходящих по условию елементов
 00000044 00000000			cElSum	dd		0 ; сумма подходящих по условию елементов
 00000048 00000002			const	dd		2

 00000000			.DATA?
 00000000 00000000			result   dd    ? ; удалить
 00000004 00000000			resultX   dd    ?
 00000008 00000000			resultY   dd    ?

 00000000			.CODE 
 00000000			lab3:

 00000000  BF 00000000			mov edi, 0		; 'индекс' массива
 00000005  8D 1D 00000000 R		lea ebx, x
 0000000B  8D 35 00000038 R		lea esi, nx
 00000011  E8 00000035			call func

 00000016  A1 00000000 R		mov eax, result

 0000001B  C7 05 00000040 R		mov cEl, 0		; возвращаем элементы к исходным данным
	   00000000
 00000025  C7 05 00000044 R		mov cElSum, 0
	   00000000
 0000002F  BF 00000000			mov edi, 0

 00000034  8D 1D 00000028 R		lea ebx, y
 0000003A  8D 35 0000003C R		lea esi, ny
 00000040  E8 00000006			call func

 00000045  A1 00000000 R		mov eax, result
 0000004A  C3				ret

 0000004B			func proc
					; [ebx] - массив
					; [esi] - длина
 0000004B  8B 0E			mov ecx, [esi]
 0000004D  D1 E9			shr ecx, 1
 0000004F  73 01			jnc c1
 00000051  41				inc ecx
 00000052			c1:
 00000052  8B 04 3B			mov eax, [ebx+edi] ; без такой конструкции не работает
 00000055  D1 E8			shr eax, 1
 00000057  72 0F			jc c2

 00000059  8B 04 3B			mov eax, [ebx+edi]
 0000005C  FF 05 00000040 R		inc cEl
 00000062  01 05 00000044 R		add cElSum, eax
 00000068			c2:
 00000068  83 C7 08			add edi, 8		; просматриваем элементы массива через один (только четные индексы)
 0000006B  E2 E5			loop c1

 0000006D  83 3D 00000040 R		cmp cEl, 0		; проверка, не является ли cEl нулем
	   00

 00000074  75 02			jne c3
 00000076  74 14			je c4
 00000078			c3:
 00000078  A1 00000044 R		mov eax, cElSum
 0000007D  8B 1D 00000040 R		mov ebx, cEl
 00000083  99				cdq
 00000084  F7 FB			idiv ebx
 00000086  A3 00000000 R		mov result, eax
 0000008B  C3				ret
 0000008C			c4:
 0000008C  C7 05 00000000 R		mov result, 0
	   00000000
 00000096  C3				ret
 00000097			func endp

				end	lab3  
