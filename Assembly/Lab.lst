Microsoft (R) Macro Assembler Version 14.29.30133.0	    10/05/21 09:49:24
Lab.asm							     Page 1 - 1


				   
				.MODEL FLAT,stdcall  ;Модель памяти плоская, стандартный

				.LIST ; Директивы .XLIST и .LIST обеспечивают правильное
				      ; формирование листинга программы
 00000000			.DATA
 00000000 0014				a  dw  20
 00000002 0014				b  dw  20

 00000000			.DATA? ;Директива описания начала раздела неинициализированных данных. 
 00000000 0000				y   dw    ?

 00000000			.CODE   ;Директива описания начала сегмента кода. 
 00000000			lab2:   ;Это метка, в нашей программе определяет точку
 00000000  66| B8 0009			mov ax, 9	;ax=9
 00000004  66| F7 2D			imul b		;ax=9b
	   00000002 R
 0000000B  66| 8B D8			mov bx, ax	;bx=9b
 0000000E  66| B8 0005			mov ax,5	;ax=5
 00000012  66| F7 2D			imul a		;ax=5a
	   00000000 R
 00000019  66| 2B D8			sub bx, ax	;bx=9b-5a
					
 0000001C  66| 83 FB 04			cmp bx, 4

 00000020  7C 04			jl	m1		;9b-5a<4
 00000022  74 02			je	m2		;9b-5a=4
 00000024  7F 00			jg	m3		;9b-5a>4

 00000026			m1:
					;mov 
					;mov  ax,3    ;ax=3	
					;imul b       ;ax=b*3
					;add  ax,a    ;ax=ax+а=а+b*3
					;cmp  ax,40   ;Сравнение b*3+a числом 40
					;je   m2      ;Переход,если равно
					;jg   m3      ;Переход если больше
				;Вычисление по первой ветви, если меньше
					;mov  ax,a    ;ax=a;
					;imul b       ;ax=a*b
					;sub  ax,36   ;ax=a*b-36
					;neg  ax      ;ax=-(a*b-36)=36-a*b
					;jmp  near ptr m_end   ;Переход на конец
 00000026			m2:
				;Вычисление по второй ветви, если равно
					;mov  ax,a    ;ax=a
					;cwd          ;ax->(dx:ax), расширяем слово до 
					             ;                двойного слова
					;idiv b       ;ax=a/b
					;dec  ax      ;ax=a/b-1
					;jmp  m_end   ;Переход на конец
 00000026			m3:
				;Вычисление по третьей ветви, если больше
					;mov  ax,b    ;ax=b
					;cwd          ;ax->(dx:ax), расширяем слово до 
					             ;                двойного слова
					;idiv a       ;ax=b/a
					;sub  ax,6    ;ax=b/a-6
					;neg  ax      ;ax=-(b/a-6)=6-b/a
 00000026			m_end:
					;mov  x,ax    ;Занесение результата в поле переменной Х
 00000026  C3			ret  ;это макрос, который вызывает функцию ExitProcess, которая
					    ;возвращает управление операционоой системе
				end	lab2  ;Это директива ассемблера - определяет точку входа.
