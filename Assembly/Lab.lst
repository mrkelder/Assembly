Microsoft (R) Macro Assembler Version 14.29.30133.0	    11/09/21 07:52:40
Lab.asm							     Page 1 - 1


				   
				.MODEL FLAT,stdcall

				; Определить среднее арифметическое четных элементов массива, расположенных на четных позициях.

				.LIST
				  
 00000000			.DATA
 00000000 00000002			x		dd		2, 1, 4, 4, 8, 5, 1, 7, 3, 9
	   00000001
	   00000004
	   00000004
	   00000008
	   00000005
	   00000001
	   00000007
	   00000003
	   00000009
 00000028 0000000A			nx		dd		10
 0000002C 00000000			cEl		dd		0 ; кол-во подходящих по условию елементов
 00000030 00000000			cElSum	dd		0 ; сумма подходящих по условию елементов
 00000034 00000002			const	dd		2

 00000000			.DATA?
 00000000 00000000			result   dd    ?

 00000000			.CODE 
 00000000			lab3:
 00000000  BF 00000000			mov edi, 0		; 'индекс' массива

 00000005  A1 00000028 R		mov eax, nx
 0000000A  99				cdq
 0000000B  F7 3D 00000034 R		idiv const

 00000011  8B C8			mov ecx, eax	; сколько раз будет просмотрен массив
 00000013  83 FA 00			cmp edx, 0

 00000016  74 01			je c1			; если edx не равен нулю, то нужно прибавить еще одну итерацию
 00000018  41				inc ecx
 00000019			c1:
									; итерация
 00000019  8B 87 00000000 R		mov eax, x[edi]	; заносим итерируемый элемент в массив

 0000001F  99				cdq
 00000020  F7 3D 00000034 R		idiv const

 00000026  83 FA 00			cmp edx, 0		; проверяем элемент на четность

 00000029  75 12			jne c2			; если число нечетное, игнорируем его
 0000002B  8B 87 00000000 R		mov eax, x[edi]
 00000031  FF 05 0000002C R		inc cEl
 00000037  01 05 00000030 R		add cElSum, eax
 0000003D			c2:
				; TODO: проверять условие, если cEl === 0
 0000003D  83 C7 08			add edi, 8		; просматриваем элементы массива через один (только четные индексы)
 00000040  E2 D7			loop c1

 00000042  83 3D 0000002C R		cmp cEl, 0
	   00

 00000049  75 02			jne c3
 0000004B  74 14			je c4
 0000004D			c3:
 0000004D  A1 00000030 R		mov eax, cElSum
 00000052  8B 1D 0000002C R		mov ebx, cEl
 00000058  99				cdq
 00000059  F7 FB			idiv ebx
 0000005B  A3 00000000 R		mov result, eax
 00000060  C3				ret
 00000061			c4:
 00000061  C7 05 00000000 R		mov result, 0
	   00000000
 0000006B  C3				ret

				end	lab3  
