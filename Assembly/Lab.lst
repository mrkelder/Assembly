Microsoft (R) Macro Assembler Version 14.29.30133.0	    10/02/21 16:23:12
Lab.asm							     Page 1 - 1


				;Следующие три строки это директивы ассемблера, 
				;которые можно не задавать, т.к.работаем в Visual Studio. 
				;Символ ";" - это начало однострочного комментария

				;.686                 ;Система команд процессора 686       
				.MODEL FLAT,stdcall  ;Модель памяти плоская, стандартный
				                      ;вызов процедуры
				;option casemap:none  ;Режим при котором заглавные и
				                      ;строчные буквы не различаются

				comment * --- Это многострочный комментарий
					Условие задачи:Вычислить арифметические выражения для x и y. 
					Вычисления в байтах. *---- 

				;.XLIST
					;include \masm32\include\masm32rt.inc
					    ;	Обеспечивает подключение всех необходимых функций 
					    ;	и макросов.	

				.LIST ; Директивы .XLIST и .LIST обеспечивают правильное
				      ; формирование листинга программы
 00000000			.DATA ; Директива описания начала раздела инициализированных данных. 
 00000000 FFFF				a   dw   -1
 00000002 FFFE				b   dw    -2
 00000004 0020				c1  dw    32

 00000000			.DATA? ;Директива описания начала раздела неинициализированных данных. 
 00000000 0000				x   dw    ?
 00000002 0000				y   dw    ?

 00000000			.CODE   ;Директива описания начала сегмента кода. 
 00000000			lab1:   ;Это метка, в нашей программе определяет точку
							  ;входа - стартовый адрес
				         
				;Вычисляем x
 00000000  66| B8 0002			mov ax, 2	;ax=2
 00000004  66| F7 2D			imul c1		;ax=c^2
	   00000004 R
 0000000B  66| F7 2D			imul c1		;ax=2c^2
	   00000004 R
 00000012  66| 8B D8			mov bx, ax	;bx=2c^2
 00000015  66| A1			mov ax, c1	;ax=c
	   00000004 R
 0000001B  66| F7 2D			imul b		;ax=bc
	   00000002 R
 00000022  66| 2B D8			sub bx, ax	;ax=2c^2-bc
 00000025  66| B8 0008			mov ax, 8	;ax=8
 00000029  66| F7 2D			imul a		;ax=8b
	   00000000 R
 00000030  66| F7 2D			imul b		;ax=8ab
	   00000002 R
 00000037  66| 2B 05			sub ax, c1	;ax=8ab-c
	   00000004 R
 0000003E  66| 93			xchg ax, bx	;ax=2c^2-bc bx=8ab-c
 00000040  66| 99			cwd
 00000042  66| F7 FB			idiv bx
 00000045  66| A3			mov x, ax ;x -132
	   00000000 R

				;Вычисляем y
 0000004B  66| BB 0003			mov bx, 3	;bx=3
 0000004F  66| F7 E8			imul ax		;ax=x^2
 00000052  66| 2B D8			sub bx, ax	;bx=3-x^2
 00000055  66| 2B 1D			sub bx, c1	;bx=3-X^2-c
	   00000004 R
 0000005C  66| A1			mov ax, b	;ax=b
	   00000002 R
 00000062  66| F7 2D			imul a		;ax=ba
	   00000000 R
 00000069  66| 8B 35			mov si, x	;si=x
	   00000000 R
 00000070  66| D1 E6			shl si, 1	;sl=2x
 00000073  66| 2B C6			sub ax, si	;ax=ba-2x
 00000076  66| 93			xchg ax, bx
 00000078  66| 99			cwd
 0000007A  66| F7 FB			idiv bx
 0000007D  66| A3			mov y, ax
	   00000002 R

 00000083  C3			ret  ;это макрос, который вызывает функцию ExitProcess, которая
					    ;возвращает управление операционоой системе
				end	lab1  ;Это директива ассемблера - определяет точку входа.
