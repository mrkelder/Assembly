Microsoft (R) Macro Assembler Version 14.29.30133.0	    11/10/21 18:12:46
Lab.asm							     Page 1 - 1


				   
				.MODEL FLAT,stdcall

				; Определить среднее арифметическое четных элементов массива, расположенных на четных позициях.

				.LIST
				  
 00000000			.DATA
 00000000 00000002			x		dd		2, 1, 2, 4, 2, 5, 1, 7, 3, 9
	   00000001
	   00000002
	   00000004
	   00000002
	   00000005
	   00000001
	   00000007
	   00000003
	   00000009
 00000028 00000002			y		dd		2, 3, 4, 5
	   00000003
	   00000004
	   00000005
 00000038 0000000A			nx		dd		10
 0000003C 00000004			ny		dd		4
 00000040 00000000			cEl		dd		0 ; кол-во подходящих по условию елементов
 00000044 00000000			cElSum	dd		0 ; сумма подходящих по условию елементов
 00000048 00000002			const	dd		2

 00000000			.DATA?
 00000000 00000000			result   dd    ? ; удалить
 00000004 00000000			resultX   dd    ?
 00000008 00000000			resultY   dd    ?

 00000000			.CODE 
 00000000			lab3:


 00000000  BF 00000000			mov edi, 0		; 'индекс' массива
 00000005  8D 1D 00000000 R		lea ebx, x
 0000000B  8D 35 00000038 R		lea esi, nx
 00000011  E8 00000035			call func

 00000016  A1 00000000 R		mov eax, result

 0000001B  C7 05 00000040 R		mov cEl, 0		; возвращаем элементы к исходным данным
	   00000000
 00000025  C7 05 00000044 R		mov cElSum, 0
	   00000000
 0000002F  BF 00000000			mov edi, 0

 00000034  8D 1D 00000028 R		lea ebx, y
 0000003A  8D 35 0000003C R		lea esi, ny
 00000040  E8 00000006			call func

 00000045  A1 00000000 R		mov eax, result
 0000004A  C3				ret

 0000004B			func proc
					; [ebx] - массив
					; [esi] - длина
 0000004B  8B 06			mov eax, [esi]
 0000004D  99				cdq
 0000004E  F7 3D 00000048 R		idiv const

 00000054  8B C8			mov ecx, eax	; сколько раз будет просмотрен массив
 00000056  83 FA 00			cmp edx, 0

 00000059  74 02			je c1			; если edx не равен нулю, то нужно прибавить еще одну итерацию
 0000005B  41				inc ecx
 0000005C  C3				ret
 0000005D			c1:
 0000005D  8B 04 3B			mov eax, [ebx+edi]	; заносим итерируемый элемент в массив
 00000060  99				cdq
 00000061  F7 3D 00000048 R		idiv const

 00000067  83 FA 00			cmp edx, 0		; проверяем элемент на четность

 0000006A  75 0F			jne c2			; если число нечетное, игнорируем его
 0000006C  8B 04 3B			mov eax, [ebx+edi]
 0000006F  FF 05 00000040 R		inc cEl
 00000075  01 05 00000044 R		add cElSum, eax
 0000007B			c2:
 0000007B  83 C7 08			add edi, 8		; просматриваем элементы массива через один (только четные индексы)
 0000007E  E2 DD			loop c1

 00000080  83 3D 00000040 R		cmp cEl, 0		; проверка, не является ли cEl нулем
	   00

 00000087  75 02			jne c3
 00000089  74 14			je c4
 0000008B			c3:
 0000008B  A1 00000044 R		mov eax, cElSum
 00000090  8B 1D 00000040 R		mov ebx, cEl
 00000096  99				cdq
 00000097  F7 FB			idiv ebx
 00000099  A3 00000000 R		mov result, eax
 0000009E  C3				ret
 0000009F			c4:
 0000009F  C7 05 00000000 R		mov result, 0
	   00000000
 000000A9  C3				ret
 000000AA			func endp

				end	lab3  
