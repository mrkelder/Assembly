;Следующие три строки это директивы ассемблера, 
;которые можно не задавать, т.к.работаем в Visual Studio. 
;Символ ";" - это начало однострочного комментария

;.686                 ;Система команд процессора 686       
.MODEL FLAT,stdcall  ;Модель памяти плоская, стандартный
                      ;вызов процедуры
;option casemap:none  ;Режим при котором заглавные и
                      ;строчные буквы не различаются

comment * --- Это многострочный комментарий
	Условие задачи:Вычислить арифметические выражения для x и y. 
	Вычисления в байтах. *---- 

;.XLIST
	;include \masm32\include\masm32rt.inc
	    ;	Обеспечивает подключение всех необходимых функций 
	    ;	и макросов.	

.LIST ; Директивы .XLIST и .LIST обеспечивают правильное
      ; формирование листинга программы
.DATA ; Директива описания начала раздела инициализированных данных. 
	a   dw   -1
	b   dw    -2
	c1  dw    32

.DATA? ;Директива описания начала раздела неинициализированных данных. 
	x   dw    ?
	y   dw    ?

.CODE   ;Директива описания начала сегмента кода. 
lab1:   ;Это метка, в нашей программе определяет точку
			  ;входа - стартовый адрес
         
;Вычисляем x
	mov ax, 2	;ax=2
	imul c1		;ax=c^2
	imul c1		;ax=2c^2
	mov bx, ax	;bx=2c^2
	mov ax, c1	;ax=c
	imul b		;ax=bc
	sub bx, ax	;ax=2c^2-bc
	mov ax, 8	;ax=8
	imul a		;ax=8b
	imul b		;ax=8ab
	sub ax, c1	;ax=8ab-c
	xchg ax, bx	;ax=2c^2-bc bx=8ab-c
	cwd
	idiv bx
	mov x, ax ;x -132

;Вычисляем y
	mov bx, 3	;bx=3
	imul ax		;ax=x^2
	sub bx, ax	;bx=3-x^2
	sub bx, c1	;bx=3-X^2-c
	mov ax, b	;ax=b
	imul a		;ax=ba
	mov si, x	;si=x
	shl si, 1	;sl=2x
	sub ax, si	;ax=ba-2x
	xchg ax, bx ;ax=-17453 bx=266
	cwd
	idiv bx
	mov y, ax ;y=-65

ret  ;это макрос, который вызывает функцию ExitProcess, которая
	    ;возвращает управление операционоой системе
end	lab1  ;Это директива ассемблера - определяет точку входа.